<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-02T21:02:11 IST" name="SauceDemo" finished-at="2023-10-02T21:02:28 IST" duration-ms="16838">
    <groups>
    </groups>
    <test started-at="2023-10-02T21:02:11 IST" name="FirstCase" finished-at="2023-10-02T21:02:12 IST" duration-ms="924">
      <class name="base.TestBase">
        <test-method is-config="true" signature="beforeMethodMethod()[pri:0, instance:base.TestBase@3e84448c]" started-at="2023-10-02T21:02:11 IST" name="beforeMethodMethod" finished-at="2023-10-02T21:02:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,org.testng.ITestResult)[pri:0, instance:base.TestBase@3e84448c]" started-at="2023-10-02T21:02:11 IST" name="loginTest" finished-at="2023-10-02T21:02:11 IST" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:base.TestBase@3e84448c]" started-at="2023-10-02T21:02:11 IST" name="afterMethodMethod" finished-at="2023-10-02T21:02:11 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=TestBase.loginTest(java.lang.String,java.lang.String,org.testng.ITestResult)[pri:0, instance:base.TestBase@3e84448c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method is-config="true" signature="afterTestMethod()[pri:0, instance:base.TestBase@3e84448c]" started-at="2023-10-02T21:02:11 IST" name="afterTestMethod" finished-at="2023-10-02T21:02:12 IST" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
      </class> <!-- base.TestBase -->
    </test> <!-- FirstCase -->
    <test started-at="2023-10-02T21:02:12 IST" name="SecondCase" finished-at="2023-10-02T21:02:28 IST" duration-ms="15889">
      <class name="base.TestBase">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:08 IST" name="setUp" finished-at="2023-10-02T21:02:11 IST" duration-ms="3203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,org.testng.ITestResult)[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:12 IST" name="loginTest" finished-at="2023-10-02T21:02:12 IST" duration-ms="147" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_Invaliduser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_Invalidpwd]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login Failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login Failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at utils.GenericMethods.performLogin(GenericMethods.java:24)
at base.TestBase.loginTest(TestBase.java:103)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="beforeMethodMethod()[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:12 IST" name="beforeMethodMethod" finished-at="2023-10-02T21:02:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method is-config="true" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:12 IST" name="afterMethodMethod" finished-at="2023-10-02T21:02:12 IST" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=FAILURE method=TestBase.loginTest(java.lang.String,java.lang.String,org.testng.ITestResult)[pri:0, instance:base.TestBase@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method is-config="true" signature="afterTestMethod()[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:12 IST" name="afterTestMethod" finished-at="2023-10-02T21:02:28 IST" duration-ms="15436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method is-config="true" signature="afterSuiteMethod()[pri:0, instance:base.TestBase@543588e6]" started-at="2023-10-02T21:02:28 IST" name="afterSuiteMethod" finished-at="2023-10-02T21:02:28 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteMethod -->
      </class> <!-- base.TestBase -->
    </test> <!-- SecondCase -->
  </suite> <!-- SauceDemo -->
</testng-results>
